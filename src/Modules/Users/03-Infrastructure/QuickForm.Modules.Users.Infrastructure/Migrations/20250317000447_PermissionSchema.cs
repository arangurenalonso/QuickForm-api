//<auto-generated/>

using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace QuickForm.Modules.Users.Persistence.Migrations
{
    /// <inheritdoc />
    public partial class PermissionSchema : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_UserRole_Role_RoleId",
                schema: "Auth",
                table: "UserRole");

            migrationBuilder.DropForeignKey(
                name: "FK_UserRole_Users_UserId",
                schema: "Auth",
                table: "UserRole");

            migrationBuilder.DropIndex(
                name: "IX_UserRole_RoleId",
                schema: "Auth",
                table: "UserRole");

            migrationBuilder.DropIndex(
                name: "IX_UserRole_UserId",
                schema: "Auth",
                table: "UserRole");

            migrationBuilder.DropColumn(
                name: "RoleId",
                schema: "Auth",
                table: "UserRole");

            migrationBuilder.DropColumn(
                name: "UserId",
                schema: "Auth",
                table: "UserRole");

            migrationBuilder.CreateTable(
                name: "PermissionResources",
                schema: "Auth",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    Description = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: false),
                    CreatedBy = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false),
                    ModifiedBy = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    CreatedDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    ModifiedDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    IsActive = table.Column<bool>(type: "bit", nullable: false, defaultValue: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PermissionResources", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "PermissionsActions",
                schema: "Auth",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    Description = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: false),
                    CreatedBy = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false),
                    ModifiedBy = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    CreatedDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    ModifiedDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    IsActive = table.Column<bool>(type: "bit", nullable: false, defaultValue: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PermissionsActions", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Permissions",
                schema: "Auth",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IdResources = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    IdAction = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
                    CreatedBy = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false),
                    ModifiedBy = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    CreatedDate = table.Column<DateTime>(type: "datetime2", nullable: false),
                    ModifiedDate = table.Column<DateTime>(type: "datetime2", nullable: true),
                    IsActive = table.Column<bool>(type: "bit", nullable: false, defaultValue: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Permissions", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Permissions_PermissionResources_IdResources",
                        column: x => x.IdResources,
                        principalSchema: "Auth",
                        principalTable: "PermissionResources",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Permissions_PermissionsActions_IdAction",
                        column: x => x.IdAction,
                        principalSchema: "Auth",
                        principalTable: "PermissionsActions",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_UserRole_IdRole",
                schema: "Auth",
                table: "UserRole",
                column: "IdRole");

            migrationBuilder.CreateIndex(
                name: "IX_UserRole_IdUser",
                schema: "Auth",
                table: "UserRole",
                column: "IdUser");

            migrationBuilder.CreateIndex(
                name: "IX_Permissions_IdAction",
                schema: "Auth",
                table: "Permissions",
                column: "IdAction");

            migrationBuilder.CreateIndex(
                name: "IX_Permissions_IdResources",
                schema: "Auth",
                table: "Permissions",
                column: "IdResources");

            migrationBuilder.AddForeignKey(
                name: "FK_UserRole_Role_IdRole",
                schema: "Auth",
                table: "UserRole",
                column: "IdRole",
                principalSchema: "Auth",
                principalTable: "Role",
                principalColumn: "Id",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_UserRole_Users_IdUser",
                schema: "Auth",
                table: "UserRole",
                column: "IdUser",
                principalSchema: "Auth",
                principalTable: "Users",
                principalColumn: "Id",
                onDelete: ReferentialAction.Cascade);
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_UserRole_Role_IdRole",
                schema: "Auth",
                table: "UserRole");

            migrationBuilder.DropForeignKey(
                name: "FK_UserRole_Users_IdUser",
                schema: "Auth",
                table: "UserRole");

            migrationBuilder.DropTable(
                name: "Permissions",
                schema: "Auth");

            migrationBuilder.DropTable(
                name: "PermissionResources",
                schema: "Auth");

            migrationBuilder.DropTable(
                name: "PermissionsActions",
                schema: "Auth");

            migrationBuilder.DropIndex(
                name: "IX_UserRole_IdRole",
                schema: "Auth",
                table: "UserRole");

            migrationBuilder.DropIndex(
                name: "IX_UserRole_IdUser",
                schema: "Auth",
                table: "UserRole");

            migrationBuilder.AddColumn<Guid>(
                name: "RoleId",
                schema: "Auth",
                table: "UserRole",
                type: "uniqueidentifier",
                nullable: false,
                defaultValue: new Guid("00000000-0000-0000-0000-000000000000"));

            migrationBuilder.AddColumn<Guid>(
                name: "UserId",
                schema: "Auth",
                table: "UserRole",
                type: "uniqueidentifier",
                nullable: false,
                defaultValue: new Guid("00000000-0000-0000-0000-000000000000"));

            migrationBuilder.CreateIndex(
                name: "IX_UserRole_RoleId",
                schema: "Auth",
                table: "UserRole",
                column: "RoleId");

            migrationBuilder.CreateIndex(
                name: "IX_UserRole_UserId",
                schema: "Auth",
                table: "UserRole",
                column: "UserId");

            migrationBuilder.AddForeignKey(
                name: "FK_UserRole_Role_RoleId",
                schema: "Auth",
                table: "UserRole",
                column: "RoleId",
                principalSchema: "Auth",
                principalTable: "Role",
                principalColumn: "Id",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_UserRole_Users_UserId",
                schema: "Auth",
                table: "UserRole",
                column: "UserId",
                principalSchema: "Auth",
                principalTable: "Users",
                principalColumn: "Id",
                onDelete: ReferentialAction.Cascade);
        }
    }
}
