// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuickForm.Modules.Users.Persistence;

#nullable disable

namespace QuickForm.Modules.Users.Persistence.Migrations
{
    [DbContext(typeof(UsersDbContext))]
    [Migration("20241113235643_Create_Database")]
    partial class Create_Database
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Auth")
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuickForm.Modules.Users.Domain.Users.UserDomain", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsEmailVerify")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPasswordChanged")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users", "Auth");
                });

            modelBuilder.Entity("QuickForm.Modules.Users.Domain.Users.UserDomain", b =>
                {
                    b.OwnsOne("QuickForm.Modules.Users.Domain.Users.EmailVO", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserDomainId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("nvarchar(255)")
                                .HasColumnName("Email");

                            b1.HasKey("UserDomainId");

                            b1.ToTable("Users", "Auth");

                            b1.WithOwner()
                                .HasForeignKey("UserDomainId");
                        });

                    b.OwnsOne("QuickForm.Modules.Users.Domain.Users.LastNameVO", "LastName", b1 =>
                        {
                            b1.Property<Guid>("UserDomainId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("LastName");

                            b1.HasKey("UserDomainId");

                            b1.ToTable("Users", "Auth");

                            b1.WithOwner()
                                .HasForeignKey("UserDomainId");
                        });

                    b.OwnsOne("QuickForm.Modules.Users.Domain.Users.NameVO", "Name", b1 =>
                        {
                            b1.Property<Guid>("UserDomainId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Name");

                            b1.HasKey("UserDomainId");

                            b1.ToTable("Users", "Auth");

                            b1.WithOwner()
                                .HasForeignKey("UserDomainId");
                        });

                    b.OwnsOne("QuickForm.Modules.Users.Domain.Users.PasswordVO", "PasswordHash", b1 =>
                        {
                            b1.Property<Guid>("UserDomainId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PasswordHash");

                            b1.HasKey("UserDomainId");

                            b1.ToTable("Users", "Auth");

                            b1.WithOwner()
                                .HasForeignKey("UserDomainId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("LastName");

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("PasswordHash")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
